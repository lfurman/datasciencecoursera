getwd()
getwd()
getwd()
getwd()
setwd("Documents/Personal/datasciencecoursera/GettingAndCleaningData//Week2")
getwd()
install.packages("RImpala")
install.packages("RJava")
install.packages("rJava")
install.packages("RImpala")
library(RImpala)
getwd()
setwd("../../../../Projects//DataScience")
getwd()
getwd()
install.packages("rJava")
install.packages("rJava")
getwd()
install.packages("RImpala")
library(RImpala)
rimpala.init(paste(getwd(), "hive-jdbc.jar", sep="/"))
paste(getwd(), "hive-jdbc.jar", sep="/")
rimpala.init(getwd())
getwd()
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
setwd("lib/")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
getwd()
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
library(RImpala)
#rimpala.init(paste(getwd(), "hive-jdbc.jar", sep="/"))
rimpala.init(libs = getwd())
rimpala.connect("54.68.129.63", "2150")
rimpala.connect(IP = "54.68.129.63", port = "2150")
source("https://github.com/hadley/httr/blob/master/demo/oauth2-github.r")
source("https://github.com/hadley/httr/blob/master/demo/oauth2-github.R")
oauth_endpoints("github")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("8d5d9814762e1874eac3", "11b449e1e498b15643975cff08bf94ae9f1429a9")
github_token <- oauth2.0_token(oauth_endpoints("8d5d9814762e1874eac3"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("8d5d9814762e1874eac3"), myapp)
oauth_endpoints("8d5d9814762e1874eac3")
oauth_endpoints("http://developer.github.com/v3/oauth/")
github
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
myapp <- oauth_app("github", "56b637a5baffac62cad9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages("httpuv")
library(httr)
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/rate_limit", gtoken)
content(req)
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
github_token
oauth_endpoints("github")
oauth_endpoints("https://api.github.com/users/jtleek/repos")
myapp <- oauth_endpoint(authorize = "https://github.com/login/oauth/authorize", access = "https://github.com/login/oauth/access_token")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_endpoint(authorize = "https://github.com/login/oauth/authorize", access = "https://github.com/login/oauth/access_token")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
#myapp <- oauth_app("8d5d9814762e1874eac3", "11b449e1e498b15643975cff08bf94ae9f1429a9")
#myapp <- oauth_app("github", "56b637a5baffac62cad9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
library(httpuv)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
#oauth_endpoints("github")
myapp <- oauth_endpoint(authorize = "https://github.com/login/oauth/authorize", access = "https://github.com/login/oauth/access_token")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(myapp)
github_token <- oauth2.0_token(myapp, myapp)
oauth_endpoints("github")
oauth_endpoints("8d5d9814762e1874eac3")
myapp <- oauth_app("github", "8d5d9814762e1874eac3")
myapp <- oauth_app("github", "8d5d9814762e1874eac3", secret = "11b449e1e498b15643975cff08bf94ae9f1429a9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("sqldf")
library(sqldf)
library(RCurl)
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
acs = getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
head(acs)
colnames(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
library(RCurl)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", header = "TRUE")
acs <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"), header = "TRUE")
acs <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"), header = "TRUE", "rt")
acs <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acs <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
acsURL <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
# 2. Register an application at https://github.com/settings/applications;
acs <- read.csv(textConnection(acsURL))
head(acs)
colnames(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
sqldf("select AGEP where unique from acs")
library(XML)
tables <- readHTMLTable(theurl)
tables <- readHTMLTable(url)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
tables <- readHTMLTable(url)
head(tables)
length(head(tables))
head(table,s 2)
head(tables, 2)
head(tables, 2)[0]
head(tables, 2)[1]
head(tables, 2)[2]
head(tables, 2)[3]
tables
tables[1]
tables[, 1]
tables[, 1]
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
head(n.rows)
tables[[which.max(n.rows)]]
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
tables <- readHTMLTable(url)
tables
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
tables <- readHTMLTable(url)
doc <- htmlParse(url)
tableNodes <- getNodeSet(doc, "//table")
tb <- readHTMLTable(tableNodes[[1]])
head(tableNodes)
head(tableNodes)[1]
head(tableNodes)[[1]
]
head(tableNodes)[[1]]
head(tableNodes)[[0]]
head(tableNodes)[0]
doc
head(doc)
doc
tableNodes <- getNodeSet(doc, "//body")
tb <- readHTMLTable(tableNodes[[1]])
tb
tableNodes
head(tableNodes)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
webpage <- getURL(url)
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
head(webpage)
c(nchar(10), nchar(20), nchar(30), nchar(100))
c(nchar(webpage[10]), nchar(20), nchar(30), nchar(100))
c(nchar(webpage[10]), nchar(webpage[20]), nchar(webpage[30]), nchar(webpage[100]))
url = getURL("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for")
data <- read.csv(textConnection(url))
head(data)
data <- read.csv(textConnection(url)[-(1:1)])
data <- read.csv(textConnection(url), skip = 1)
head(data)
data <- read.csv(textConnection(url), skip = 2)
head(data)
myapp <- oauth_app("github", "8d5d9814762e1874eac3", secret = "11b449e1e498b15643975cff08bf94ae9f1429a9")
data <- read.csv(textConnection(url), skip = 3)
head(data)
sum(data$SST.SSTA)
colnames(data)
head(data[, 4])
head(data[4, ])
colnames(data)
length(colnames(data))
data <- read.csv(textConnection(url), skip = 4)
head(data)
data <- read.csv(textConnection(url), skip = 5)
head(data)
data <- read.csv(textConnection(url), skip = 3)
head(data)
ncol(data)
data <- read.csv(textConnection(url), sep = '\t', skip = 3)
head(data)
ncol(data)
data <- read.csv("question5.txt", sep = '\t')
getwd()
setwd("../../../Personal/datasciencecoursera/GettingAndCleaningData//Quiz2")
data <- read.csv("question5.txt", sep = '\t')
head(data)
ncol(data)
data <- read.csv("question5.txt", sep = '\t')
head(data)
data <- read.csv("question5.txt", sep = '\t', header = TRUE)
head(data)
data <- read.csv("question5.txt")
head(data)
cols(data)
ncol(data)
data <- read.csv("data.csv")
ncol(data)
colnames(data) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
sum(data$Col4)
data <- read.csv("data.csv")
colnames(data) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
sum(data$Col4)
colnames(data) <- c("Col1", "Col2", "Col3", "Col4", "Col5", "Col6", "Col7", "Col8", "Col9")
sum(data$Col4)
data <- read.csv("data.csv", header = TRUE)
sum(data$SST)
data <- read.csv("data.csv", header = TRUE)
sum(data$SST)
